pipeline {
    agent any
    environment {
    
        IMAGE_NAME = 'app'
    }
    stages {
        stage('build image') {
            steps {
                sh 'docker image prune -f'
                sh 'docker image ls'
                sh 'docker rm --force python'
                sh 'docker ps'
                sh 'cd s05/python-simple-app && docker build -t ${IMAGE_NAME}:latest .'
                sh 'echo "build done!"'
            }
        }

        stage('Kill Port 8000') {
            steps {
                script {
                    sh 'kill $(lsof -t -i:8000)'
                }
            }
        }

        stage('run container') {
            steps {
                sh 'docker run -p 8000:5000 --name=python -d ${IMAGE_NAME}:latest'
            }
        }
        stage('test') {
                steps {
                    sh 'docker ps'
                    sh 'sleep 10 && curl -s localhost:8000'
                }
        }
        stage('cleanup') {
            steps {
                sh 'fuser -k 8000/tcp'
            }
        }
    }
}
